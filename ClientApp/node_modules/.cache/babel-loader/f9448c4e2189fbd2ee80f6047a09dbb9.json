{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drack90\\\\source\\\\repos\\\\appTestRosneft\\\\ClientApp\\\\src\\\\components\\\\Pipline.js\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom'; //import { CanvasBoard } from './CanvasBoard'\n//mport { PiplineSegment } from './PiplineSegment'\n\nimport './css/Pipline.css';\nimport { PiplineSegment } from './PiplineSegment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Pipline extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      piplinesSegmentCount: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"piplineSections\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-xxl-8 col-xl-8 col-lg-8\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"canvasContainer\",\n              children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n                id: \"piplineCanvas\",\n                width: \"740\",\n                height: \"425\",\n                onMouseDown: e => {\n                  let newEvent = e.nativeEvent;\n                  HandleMouseDown(newEvent);\n                },\n                onMouseUp: e => {\n                  let nativeEvent = e.nativeEvent;\n                  HandleMouseUp(nativeEvent);\n                },\n                onMouseMove: e => {\n                  let nativeEvent = e.nativeEvent;\n                  HandleMouseMove(nativeEvent);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-xxl-4 col-xl-4 col-lg-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"boardContainer\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"canvasBoard_componen\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-primary\",\n                  onClick: (activeCanvas, AddPipline),\n                  children: \" \\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u044B\\u0439 \\u0442\\u0440\\u0443\\u0431\\u043E\\u043F\\u0440\\u043E\\u0432\\u043E\\u0434 \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-success\",\n                  onClick: SetAddPointActive,\n                  children: \" \\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0443\\u0437\\u0435\\u043B \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-danger\",\n                  children: \" \\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0443\\u0437\\u0435\\u043B \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-warning\",\n                  children: \" \\u0420\\u0430\\u0441\\u0441\\u0447\\u0438\\u0442\\u0430\\u0442\\u044C \\u043F\\u0435\\u0440\\u0435\\u0441\\u0435\\u0447\\u0435\\u043D\\u0438\\u044F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"piplineElements\",\n              id: \"piplineItems\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"piplineList\",\n                id: \"piplineList\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nPipline.dislpayName = Pipline.name;\nlet piplines = [];\nlet mouseDown = false;\nlet piplinesCount = 0;\nlet defaultId = 0;\nlet defaultPoint = [0, 0];\nlet AddPointActive = false;\nlet downOnSelected = false;\nlet points = [];\nlet selectedNumber = -1;\nlet activePipline = -1;\n\nfunction addPiplines() {\n  let pipline = {\n    id: piplinesCount,\n    name: 'Трубопровод ' + piplinesCount,\n    points: [],\n    color: ''\n  };\n  this.piplines.push(pipline);\n}\n\nfunction SetAddPointActive() {\n  AddPointActive = true;\n  console.log(\"Add active\");\n}\n\n_c = SetAddPointActive;\n\nlet log = () => {\n  console.log('kek');\n};\n\nfunction renderPiplineItems() {\n  return render(piplines.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n    id: item.id + \"pipline\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"pipline-btn\",\n      type: \"button\",\n      onClick: () => setPipline(item.id),\n      children: item.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this)\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 13\n  }, this)), document.getElementById('piplineList'));\n}\n\nfunction setPipline(id) {\n  if (activePipline !== id && activePipline !== -1) {\n    document.getElementById(activePipline + \"pipline\").classList.remove('pipline-btn__active');\n  }\n\n  let pipline = document.getElementById(id + \"pipline\");\n  pipline.classList.add('pipline-btn__active');\n  activePipline = id;\n}\n\nfunction getRandomColor() {\n  var letters = '0123456789ABCDEF';\n  var color = '#';\n\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n\n  return color;\n}\n\nfunction AddPipline() {\n  let color = getRandomColor();\n  let pipline = {\n    id: piplinesCount + 1,\n    name: \"Трубопровод \" + (piplinesCount + 1),\n    color: color,\n    points: []\n  };\n  piplines.push(pipline);\n  piplinesCount += 1;\n  renderPiplineItems();\n\n  if (piplines.length <= 1) {\n    activePipline = pipline.id;\n    setPipline(pipline.id);\n  }\n} //Проверить перед деплоем\n\n\n_c2 = AddPipline;\n\nfunction DeletePipline(id) {\n  piplines.every((item, i) => {\n    if (item.i === id) {\n      delete piplines[i];\n    }\n  });\n}\n\n_c3 = DeletePipline;\n\nlet activeCanvas = () => {\n  let canvas = document.getElementById('piplineCanvas').classList.toggle('canvas_active');\n};\n\nfunction AddPoint(x, y) {\n  var point = {\n    x,\n    y\n  };\n  points.push(point);\n}\n\n_c4 = AddPoint;\n\nlet addPointsToPipline = (piplineIndex, x, y) => {\n  let point = {\n    x,\n    y\n  };\n  piplines[piplineIndex - 1].points.push(point);\n};\n\nfunction TrySelectPoint(x, y) {\n  for (var i = 0; i < points.length; i++) {\n    var point = points[i];\n\n    if (x >= point.x - 5 && x <= point.x + 5 && y >= point.y - 5 && y <= point.y + 5) {\n      selectedNumber = i;\n      DrawPipeline();\n      return true;\n    }\n  }\n\n  console.log(points);\n  return false;\n}\n\n_c5 = TrySelectPoint;\n\nfunction HandleMouseDown(event) {\n  mouseDown = true;\n\n  if (AddPointActive) {\n    var x = event.offsetX;\n    var y = event.offsetY;\n    addPointsToPipline(activePipline, x, y);\n    AddPoint(x, y);\n    DrawPipeline();\n    AddPointActive = false;\n  } else {\n    x = event.offsetX;\n    y = event.offsetY;\n    downOnSelected = TrySelectPoint(x, y);\n  }\n}\n\n_c6 = HandleMouseDown;\n\nfunction HandleMouseMove(event) {\n  if (mouseDown) {\n    if (downOnSelected) {\n      var x = event.offsetX;\n      var y = event.offsetY;\n      var point = points[selectedNumber];\n      point.x = x;\n      point.y = y;\n      DrawPipeline();\n    }\n  }\n}\n\n_c7 = HandleMouseMove;\n\nfunction HandleMouseUp() {\n  mouseDown = false;\n  downOnSelected = false;\n}\n\n_c8 = HandleMouseUp;\n\nfunction DrawPipeline() {\n  var canvas = document.getElementById('piplineCanvas');\n  var ctx = canvas.getContext('2d');\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n  if (points.length > 0) {\n    DrawLines();\n  }\n\n  piplines.forEach(pipline => {\n    for (const key in pipline.points) {\n      if (Object.hasOwnProperty.call(pipline.points, key)) {\n        const point = pipline.points[key];\n        console.log('draw point');\n        DrawPoint(point.x, point.y, pipline.color);\n      }\n    }\n  }); // for (var i = 0; i < points.length; i++) {\n  //     if (i === selectedNumber)\n  //         DrawPoint(points[i].x, points[i].y, \"red\");\n  //     else\n  //         DrawPoint(points[i].x, points[i].y, \"black\");\n  // }\n}\n\n_c9 = DrawPipeline;\n\nfunction DrawPoint(x, y, color) {\n  var canvas = document.getElementById('piplineCanvas');\n  var ctx = canvas.getContext('2d');\n  ctx.beginPath();\n  ctx.arc(x, y, 5, 0, getRadians(360));\n  ctx.fillStyle = color;\n  ctx.moveTo(x, y);\n  ctx.fill();\n}\n\n_c10 = DrawPoint;\n\nfunction DrawLines() {\n  var canvas = document.getElementById('piplineCanvas');\n  var ctx = canvas.getContext('2d');\n  ctx.beginPath(); // ctx.moveTo(points[0].x, points[0].y);\n  // for (const key in piplines) {\n  //     if (Object.hasOwnProperty.call(piplines, key)) {\n  //         const pipline = piplines[key];\n  //         ctx.moveTo(points[0].x, points[0].y);\n  //         console.log(pipline);\n  //         for (var i = 1; i < pipline.points.length; i++) {\n  //             ctx.lineTo(pipline.points[i].x, pipline.points[i].y);\n  //         }\n  //     }\n  // }\n\n  for (let i = 0; i < piplines.length; i++) {\n    const pipline = piplines[i];\n    ctx.moveTo(pipline[0].x, points[0].y);\n    console.log(pipline);\n\n    for (var y = 1; y < pipline.points.length; y++) {\n      ctx.lineTo(pipline.points[y].x, pipline.points[y].y);\n    }\n  } // for (var i = 1; i < points.length; i++) {\n  //     ctx.lineTo(points[i].x, points[i].y);\n  // }\n\n\n  ctx.stroke();\n}\n\n_c11 = DrawLines;\n\nfunction getRadians(degrees) {\n  return Math.PI / 180 * degrees;\n}\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n\n$RefreshReg$(_c, \"SetAddPointActive\");\n$RefreshReg$(_c2, \"AddPipline\");\n$RefreshReg$(_c3, \"DeletePipline\");\n$RefreshReg$(_c4, \"AddPoint\");\n$RefreshReg$(_c5, \"TrySelectPoint\");\n$RefreshReg$(_c6, \"HandleMouseDown\");\n$RefreshReg$(_c7, \"HandleMouseMove\");\n$RefreshReg$(_c8, \"HandleMouseUp\");\n$RefreshReg$(_c9, \"DrawPipeline\");\n$RefreshReg$(_c10, \"DrawPoint\");\n$RefreshReg$(_c11, \"DrawLines\");","map":{"version":3,"sources":["C:/Users/drack90/source/repos/appTestRosneft/ClientApp/src/components/Pipline.js"],"names":["React","Component","render","PiplineSegment","Pipline","state","piplinesSegmentCount","e","newEvent","nativeEvent","HandleMouseDown","HandleMouseUp","HandleMouseMove","activeCanvas","AddPipline","SetAddPointActive","dislpayName","name","piplines","mouseDown","piplinesCount","defaultId","defaultPoint","AddPointActive","downOnSelected","points","selectedNumber","activePipline","addPiplines","pipline","id","color","push","console","log","renderPiplineItems","map","item","setPipline","document","getElementById","classList","remove","add","getRandomColor","letters","i","Math","floor","random","length","DeletePipline","every","canvas","toggle","AddPoint","x","y","point","addPointsToPipline","piplineIndex","TrySelectPoint","DrawPipeline","event","offsetX","offsetY","ctx","getContext","clearRect","width","height","DrawLines","forEach","key","Object","hasOwnProperty","call","DrawPoint","beginPath","arc","getRadians","fillStyle","moveTo","fill","lineTo","stroke","degrees","PI"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { render } from 'react-dom'\r\n//import { CanvasBoard } from './CanvasBoard'\r\n//mport { PiplineSegment } from './PiplineSegment'\r\nimport './css/Pipline.css'\r\nimport { PiplineSegment } from './PiplineSegment';\r\n\r\nexport class Pipline extends Component {\r\n    static dislpayName = Pipline.name;\r\n\r\n    state = {\r\n        piplinesSegmentCount: 0\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <section className=\"piplineSections\">\r\n                <div className=\"container\">\r\n                   <div className=\"row\">\r\n                        <div className=\"col-xxl-8 col-xl-8 col-lg-8\">\r\n                            <div className=\"canvasContainer\">\r\n                                <canvas id=\"piplineCanvas\" width=\"740\" height=\"425\"\r\n                                    onMouseDown={(e) => {\r\n                                        let newEvent = e.nativeEvent;\r\n                                        HandleMouseDown(newEvent)\r\n                                    }}\r\n                                    onMouseUp={e => {\r\n                                        let nativeEvent = e.nativeEvent;\r\n                                        HandleMouseUp(nativeEvent);\r\n                                    }}\r\n                                    onMouseMove={e => {\r\n                                        let nativeEvent = e.nativeEvent;\r\n                                        HandleMouseMove(nativeEvent);\r\n                                    }}                                >\r\n                                </canvas>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-xxl-4 col-xl-4 col-lg-4\">\r\n                            <div className=\"boardContainer\">\r\n                                <div className=\"canvasBoard_componen\">\r\n                                    <button className=\"btn btn-primary\" onClick={activeCanvas, AddPipline}> Добавить новый трубопровод </button>\r\n                                    <button className=\"btn btn-success\" onClick={SetAddPointActive}> Добавить узел </button>\r\n                                    <button className=\"btn btn-danger\"> Удалить узел </button>\r\n                                    <button className=\"btn btn-warning\"> Рассчитать пересечения</button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"piplineElements\" id=\"piplineItems\">\r\n                                <ul className=\"piplineList\" id=\"piplineList\">\r\n                                    \r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                   </div>\r\n                </div>    \r\n            </section>\r\n           \r\n        );\r\n    }\r\n\r\n\r\n    \r\n}\r\n\r\n\r\n\r\nlet piplines = []\r\nlet mouseDown = false\r\nlet piplinesCount = 0;\r\nlet defaultId = 0;\r\nlet defaultPoint = [0, 0]\r\nlet AddPointActive = false\r\nlet downOnSelected = false;\r\nlet points = []\r\nlet selectedNumber = -1;\r\nlet activePipline = -1;\r\n\r\n\r\nfunction addPiplines(){\r\n    let pipline = {\r\n        id: piplinesCount,\r\n        name: 'Трубопровод ' + piplinesCount,  \r\n        points: [],\r\n        color: '',\r\n    }\r\n    this.piplines.push(pipline)    \r\n}\r\n \r\n\r\nfunction SetAddPointActive() {\r\n    AddPointActive = true;\r\n    console.log(\"Add active\");\r\n}\r\n\r\nlet log = () => {\r\n    console.log('kek')\r\n}\r\n\r\nfunction renderPiplineItems() {\r\n    return render(\r\n        piplines.map((item) => (\r\n            <li key={item.id} id={item.id + \"pipline\"}>\r\n                <button className=\"pipline-btn\" type=\"button\" onClick={() =>setPipline(item.id)}>{item.name}</button>\r\n            </li>\r\n        )),\r\n        document.getElementById('piplineList')\r\n    );\r\n}\r\n\r\nfunction setPipline(id) {\r\n   \r\n    if (activePipline !== id && activePipline !== -1) {\r\n        document.getElementById(activePipline + \"pipline\").classList.remove('pipline-btn__active')\r\n    }\r\n    let pipline = document.getElementById(id + \"pipline\")\r\n    pipline.classList.add('pipline-btn__active')\r\n    activePipline = id;\r\n}\r\n\r\nfunction getRandomColor() {\r\n    var letters = '0123456789ABCDEF';\r\n    var color = '#';\r\n    for (var i = 0; i < 6; i++) {\r\n        color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n}\r\n\r\nfunction AddPipline() {\r\n    let color = getRandomColor()\r\n    let pipline = {\r\n        id: piplinesCount + 1,\r\n        name: \"Трубопровод \" + (piplinesCount + 1),\r\n        color: color,\r\n        points: []\r\n    }\r\n   \r\n    piplines.push(pipline)\r\n    piplinesCount += 1\r\n    renderPiplineItems()\r\n    if (piplines.length <= 1) {\r\n        activePipline = pipline.id\r\n        setPipline(pipline.id)\r\n    }\r\n\r\n}\r\n\r\n\r\n//Проверить перед деплоем\r\nfunction DeletePipline(id) {\r\n    piplines.every((item, i) => {\r\n        if (item.i === id) {\r\n            delete piplines[i]\r\n         \r\n        }\r\n    })\r\n}\r\n\r\nlet activeCanvas = () => {\r\n    let canvas = document.getElementById('piplineCanvas').classList.toggle('canvas_active')\r\n}\r\nfunction AddPoint(x, y) {\r\n    var point = { x, y };\r\n    points.push(point);\r\n}\r\n\r\nlet addPointsToPipline = (piplineIndex, x, y) =>{\r\n    let point = {x, y};\r\n    piplines[piplineIndex-1].points.push(point);\r\n}\r\n\r\nfunction TrySelectPoint(x, y) {\r\n    for (var i = 0; i < points.length; i++) {\r\n        var point = points[i];\r\n        if (x >= point.x - 5 && x <= point.x + 5 && y >= point.y - 5 && y <= point.y + 5) {\r\n            selectedNumber = i;\r\n            DrawPipeline();\r\n            return true;\r\n        }\r\n    }\r\n    console.log(points)\r\n    return false;\r\n}\r\nfunction HandleMouseDown(event) {\r\n    mouseDown = true;\r\n    if (AddPointActive) {\r\n        var x = event.offsetX;\r\n        var y = event.offsetY;\r\n        addPointsToPipline(activePipline, x, y)\r\n        AddPoint(x, y);\r\n        DrawPipeline();\r\n        AddPointActive = false;\r\n    }\r\n    else {\r\n        x = event.offsetX;\r\n        y = event.offsetY;\r\n        downOnSelected = TrySelectPoint(x, y);\r\n    }\r\n\r\n}\r\nfunction HandleMouseMove(event) {\r\n    if (mouseDown) {\r\n        if (downOnSelected) {\r\n            var x = event.offsetX;\r\n            var y = event.offsetY;\r\n            var point = points[selectedNumber];\r\n            point.x = x;\r\n            point.y = y;\r\n            DrawPipeline();\r\n        }\r\n    }\r\n}\r\n\r\nfunction HandleMouseUp() {\r\n    mouseDown = false;\r\n    downOnSelected = false;\r\n}\r\nfunction DrawPipeline() {\r\n    var canvas = document.getElementById('piplineCanvas');\r\n    var ctx = canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    if (points.length > 0) {\r\n        DrawLines();\r\n    }\r\n    piplines.forEach(pipline => {\r\n        for (const key in pipline.points) {\r\n            if (Object.hasOwnProperty.call(pipline.points, key)) {\r\n                const point = pipline.points[key];\r\n                console.log('draw point');\r\n                DrawPoint(point.x, point.y, pipline.color)\r\n            }\r\n        }\r\n    });\r\n    // for (var i = 0; i < points.length; i++) {\r\n    //     if (i === selectedNumber)\r\n    //         DrawPoint(points[i].x, points[i].y, \"red\");\r\n    //     else\r\n    //         DrawPoint(points[i].x, points[i].y, \"black\");\r\n    // }\r\n\r\n}\r\n\r\nfunction DrawPoint(x, y, color) {\r\n    var canvas = document.getElementById('piplineCanvas');\r\n    var ctx = canvas.getContext('2d');\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, 5, 0, getRadians(360));\r\n    ctx.fillStyle = color;\r\n    ctx.moveTo(x, y);\r\n    ctx.fill();\r\n}\r\n\r\nfunction DrawLines() {\r\n    var canvas = document.getElementById('piplineCanvas');\r\n    var ctx = canvas.getContext('2d');\r\n    ctx.beginPath();\r\n    // ctx.moveTo(points[0].x, points[0].y);\r\n    // for (const key in piplines) {\r\n    //     if (Object.hasOwnProperty.call(piplines, key)) {\r\n    //         const pipline = piplines[key];\r\n    //         ctx.moveTo(points[0].x, points[0].y);\r\n    //         console.log(pipline);\r\n    //         for (var i = 1; i < pipline.points.length; i++) {\r\n    //             ctx.lineTo(pipline.points[i].x, pipline.points[i].y);\r\n    //         }\r\n    //     }\r\n    // }\r\n    for (let i = 0; i < piplines.length; i++) {\r\n        const pipline = piplines[i];\r\n        ctx.moveTo(pipline[0].x, points[0].y);\r\n            console.log(pipline);\r\n            for (var y = 1; y < pipline.points.length; y++) {\r\n                ctx.lineTo(pipline.points[y].x, pipline.points[y].y);\r\n            }\r\n    }\r\n    // for (var i = 1; i < points.length; i++) {\r\n    //     ctx.lineTo(points[i].x, points[i].y);\r\n    // }\r\n    ctx.stroke();\r\n}\r\n\r\nfunction getRadians(degrees) {\r\n    return (Math.PI / 180) * degrees;\r\n}"]},"metadata":{},"sourceType":"module"}